# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- develop
- feature/*

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python37:
      python.version: '3.7'
    Python38:
      python.version: '3.8'
    Python39:
      python.version: '3.9'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- bash: |
    curl -sSL https://install.python-poetry.org | python3 - --preview
    poetry --version || { echo "Failed to get poetry version" && exit 1; }
  displayName: "poetry: install"

- bash: |
    poetry install -v --with azp || { echo "##vso[task.logissue type=error]Error: poetry install" && exit 1 ; }
  displayName: "poetry: install package"

- script: |
    poetry run pytest vdd --junitxml=junit/test-results.xml --cov=vdd --cov-report=xml --cov-report=html
  displayName: "poetry: run tests"

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Unit test results for Python $(python.version)'
  displayName: Publish test results

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
  displayName: Publish code coverage
